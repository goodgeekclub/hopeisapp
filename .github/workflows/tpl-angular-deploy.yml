on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      buildPath:
        type: string
        default: dist/frontend
      refreshCached:
        type: boolean
        default: false

env:
  RED: "\e[31m"
  GREEN: "\e[32m"
  CYAN: "\e[36m"
  RESET: "\e[0m"

jobs:
  Deploy-S3:
    name: Deploy Build Package to S3 on ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/download-artifact@master
        with:
          name: dist-frontend-${{ github.sha }}
          path: frontend/dist
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-southeast-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Validate AWS CLI permission
        run: |
          aws s3 ls
      - name: Sync to S3
        run: aws s3 sync ${{ inputs.buildPath }} ${{ vars.CODE_BUCKET }} --delete
      - name: Refresh CloundFront Cached
        if: ${{ inputs.refreshCached }}
        run: |
          echo -e ${{env.GREEN}}"Create Invalidate Cloudfront"${{env.RESET}}
          INVALIDATION="$(aws cloudfront create-invalidation --distribution-id  ${{ vars.CLOUDFRONT_ID }} --path '/*')"
          INVALIDATION_ID="$(echo "$INVALIDATION" | jq -r '.Invalidation.Id')"
          INVALIDATION_STATUS=$(echo "$INVALIDATION" | jq -r '.Invalidation.Status')
          echo -e "INVALIDATION_ID:" $INVALIDATION_ID
          echo -e ${{env.CYAN}}"INVALIDATION_STATUS: "${{env.RESET}} "$INVALIDATION_STATUS"
          while [ $"INVALIDATION_STATUS" -eq "Complete" ]
          do
            INVALIDATION=$(aws cloudfront get-invalidation --id $INVALIDATION_ID --distribution-id ${{ vars.CLOUDFRONT_ID }})
            INVALIDATION_STATUS=$(echo "$INVALIDATION" | jq -r '.Invalidation.Status')
            echo -e ${{env.CYAN}}"INVALIDATION_STATUS: "${{env.RESET}} "$INVALIDATION_STATUS"
            sleep 60
          done
